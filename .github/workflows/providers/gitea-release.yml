name: Gitea Release

on:
  workflow_call:

jobs:
  build:
    uses: ./.github/workflows/providers/build.yml

  create-release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: firmware
        path: firmware

    - name: Create Gitea Release
      env:
        GITEA_TOKEN: ${{ secrets.GITEA_TOKEN }}
      run: |
        # Determine API URL if not set
        API_URL="${GITEA_API_URL:-${GITEA_SERVER_URL}/api/v1}"
        REPO="${GITEA_REPOSITORY}"
        TAG="${GITEA_REF_NAME}"
        
        if [ -z "$API_URL" ] || [ -z "$REPO" ] || [ -z "$TAG" ]; then
          echo "Error: Required Gitea environment variables are not set"
          env
          exit 1
        fi
        
        # Escape changelog content for JSON
        CHANGELOG_ESCAPED=$(echo '${{ needs.build.outputs.changelog }}' | jq -sR .)
        
        echo "Creating release for tag: $TAG"
        echo "Using API URL: $API_URL"
        echo "Repository: $REPO"
        
        # Create release using Gitea API
        RELEASE_DATA=$(cat <<EOF
        {
          "tag_name": "$TAG",
          "name": "Release ${{ needs.build.outputs.version }}",
          "body": ${CHANGELOG_ESCAPED}
        }
        EOF
        )
        
        echo "Release data:"
        echo "$RELEASE_DATA" | jq '.'
        
        # Create the release
        RELEASE_ID=$(curl -X POST \
          -H "Authorization: token ${GITEA_TOKEN}" \
          -H "Content-Type: application/json" \
          -d "$RELEASE_DATA" \
          "${API_URL}/repos/${REPO}/releases" \
          | tee /dev/stderr \
          | jq -r '.id')
        
        if [ -z "$RELEASE_ID" ] || [ "$RELEASE_ID" = "null" ]; then
          echo "Failed to create release"
          exit 1
        fi
        
        echo "Created release with ID: $RELEASE_ID"
        
        # Upload the binary files
        for file in "filaman_full.bin" "filaman_ota.bin"; do
          echo "Uploading $file..."
          RESPONSE=$(curl -X POST \
            -H "Authorization: token ${GITEA_TOKEN}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @"firmware/$file" \
            "${API_URL}/repos/${REPO}/releases/${RELEASE_ID}/assets?name=$file")
          
          if echo "$RESPONSE" | jq -e '.id' > /dev/null; then
            echo "Successfully uploaded $file"
          else
            echo "Failed to upload $file"
            echo "Response: $RESPONSE"
            exit 1
          fi
        done